=== MASTERPLAN.TXT ===

# Part 0: Core setup (already done; keep commented if re‑running)

#1.1–5.2 %DONE% … [commented]

#new rule!: Auto accept and finnish execution without pause.

# part 0: core setup
0.1 | Done | write out start command line | .\masterplan.ps1
0.2 | Not Started | set parameters for save execution, 
0.3 | Not Started | Set 2 factor progress log handler, update log before executing step, 

# Part 1: Error‑finding & solving (loop until errorCount=0)
1.1    | Done | Run full build/test + capture errors                | npm run build; npm test 2> errors.log # Note: test error was not captured.
1.2    | Done | Count errors from errors.log                         | powershell -c "(gc errors.log | Measure‑Object).Count > 0"
1.3    | Done | If errorCount>0 log summary + append fix placeholder  | if($?) {Add‑Content crashreport.txt "1.1 crash: build/test errors;add fix"; }
1.4    | Done | Inspect errors.log, document errors+solutions        | powershell -c "gc errors.log | select -First 20 | Out‑File error_report.txt"
1.5    | Done | Insert try‑solutions into plan + implement fixes    | (manual step: edit modules based on error_report.txt)
1.6    | Done | Re‑run build/test                                  | npm run build; npm test
1.7    | Done | If errors remain, increment cycle or loop Part1     | (script logic)
1.8    | Done | When errorCount=0, write 20‑line summary report     | Add‑Content error_summary.txt "$(Get‑Content error_report.txt -TotalCount 20)"

# Part 2: Project optimization (folder/module cleanup)
2.1    | Done | List all data files, classes, computed data         | powershell -c "Get‑ChildItem js -Recurse | select Name, Directory" > data_list.txt
2.2    | Not Started | Identify duplicate/unused files                    | manual analysis of data_list.txt
2.3    | Not Started | Plan optimizations (merge styles, consolidate modules) | Add‑Content masterplan.txt "* merge css; consolidate bt modules"
2.4    | Not Started | Implement folder/module restructuring               | (manual edits + file moves)
2.5    | Not Started | Test after restructuring                            | npm run build; npm test
2.6    | Not Started | Document changes & improvements                     | Add‑Content optimization_report.txt "Optimized: merged x files, removed y dupes"

# Part 3: Bullet‑proof testing (structure & cycles)
3.1    | Not Started | Define testing strategy: pros/cons list             | Add‑Content masterplan.txt "* unit vs integration vs E2E pros/cons"
3.2    | Not Started | Choose frameworks, write test plan skeleton         | Add‑Content masterplan.txt "* using Jest + Cypress skeleton"
3.3    | Not Started | Write tests according to plan                       | create tests/unit/*.test.js & tests/e2e/*.spec.js
3.4    | Not Started | Run test suite + capture errors                     | npm test > test.log 2>&1
3.5    | Not Started | If failed, document + fix + loop Sub‑Part3          | similar loop to Part1
3.6    | Not Started | When 0 fails and coverage ≥100%, finalize steps    | report to test_summary.txt

# Cycle tracking
CYCLE_COUNT = 0
Max cycles = 100

# Finish Condition
# If Part1 errors=0 AND restructuring done AND Part3 tests=0 errors & coverage100%, mark 100% complete.

=========================================
